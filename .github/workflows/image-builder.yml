 - name: Vault Secrets
  # You may pin to the exact commit or the version.
  # uses: hashicorp/vault-action@8fa61e909919a3f94952e9e07ace6b5a1114440b
  uses: hashicorp/vault-action@v2.4.3
  with:
    # The URL for the vault endpoint
    url: https://vault-cluster-collibra-dev-public-vault-d912d33a.857b0cae.z1.hashicorp.cloud:8200
    # A semicolon-separated list of secrets to retrieve. These will automatically be converted to environmental variable keys. See README for more details
    secrets: |
            secret/data/ci app_secret
    # The Vault namespace from which to query secrets. Vault Enterprise only, unset by default
    #namespace: # optional
    # The method to use to authenticate with Vault.
    #method: # optional, default is token
    # Vault role for specified auth method
    #role: # optional
    # Custom Vault path, if the auth method was mounted at a different path
    #path: # optional
    # The Vault Token to be used to authenticate with Vault
    token: ${{ secrets.VAULT_TOKEN }}
    # The Role Id for App Role authentication
    # roleId: # optional
    # The Secret Id for App Role authentication
    # secretId: # optional
    # The Github Token to be used to authenticate with Vault
    # githubToken: # optional
    # The path to the Kubernetes service account secret
    # kubernetesTokenPath: # optional, default is /var/run/secrets/kubernetes.io/serviceaccount/token
    # The JSON payload to be sent to Vault when using a custom authentication method.
    # authPayload: # optional
    # A string of newline separated extra headers to include on every request.
    # extraHeaders: # optional
    # Whether or not export secrets as environment variables.
    # exportEnv: # optional, default is true
    # Whether or not export Vault token as environment variables.
    # exportToken: # optional, default is false
    # Base64 encoded CA certificate to verify the Vault server certificate.
    #caCertificate: # optional
    # Base64 encoded client certificate for mTLS communication with the Vault server.
    # clientCertificate: # optional
    # Base64 encoded client key for mTLS communication with the Vault server.
    # clientKey: # optional
    # When set to true, disables verification of the Vault server certificate.  Setting this to true in production is not recommended.
    tlsSkipVerify: true
    # optional, default is false
    # Base64 encoded Private key to sign JWT
    # jwtPrivateKey: # optional
    # Password for key stored in jwtPrivateKey (if needed)
    # jwtKeyPassword: # optional
    # Identifies the recipient ("aud" claim) that the JWT is intended for
    # jwtGithubAudience: # optional
    # Time in seconds, after which token expires
    # jwtTtl: # optional, default is 3600
